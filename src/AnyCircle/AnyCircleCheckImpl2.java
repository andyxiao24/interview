package AnyCircle;import com.google.common.collect.*;import com.sun.tools.javac.util.Pair;import java.util.Set;import java.util.stream.Collectors;/** * Created by pengxiao on 2018/9/12. */public class AnyCircleCheckImpl2 implements AnyCircleCheck {    @Override    public boolean hasAnyCircle(Set<Pair<Integer, Integer>> testData) {        Multimap<Integer, Integer> dependncyMap = HashMultimap.create();        testData.stream().forEach(a -> dependncyMap.put(a.fst, a.snd));        for(Integer key : dependncyMap.keySet()) {            Set<Integer> dept = Sets.newHashSet(dependncyMap.get(key));            while(true) {                Set<Integer> newAdd = dept.stream().map(a -> dependncyMap.get(a)).flatMap(s -> s.stream()).collect(Collectors.toSet());                if (dept.containsAll(newAdd)) {                    break;                }                dept.addAll(newAdd);                if (dependncyMap.get(key).contains(key)) {                    System.out.println(dependncyMap);                    return false;                }            }            dependncyMap.putAll(key, dept);        }        System.out.println(dependncyMap);        return true;    }}